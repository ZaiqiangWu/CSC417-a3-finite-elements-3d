#include <d2psi_neo_hookean_dq2.h>

void d2psi_neo_hookean_dF2(Eigen::Matrix99d &ddw, Eigen::Ref<const Eigen::Matrix3d> F, double C, double D) {
    double f00=F(0,0);
    double f01=F(0,1);
    double f02=F(0,2);
    double f10=F(1,0);
    double f11=F(1,1);
    double f12=F(1,2);
    double f20=F(2,0);
    double f21=F(2,1);
    double f22=F(2,2);
    ddw(0,0)= C*(4*f00*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f11*f22 + (5.0/3.0)*f12*f21)*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0) + 2/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 2.0/3.0)) + D*(f11*f22 - f12*f21)*(2*f11*f22 - 2*f12*f21) ;
    ddw(0,1)= C*(2*f00*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f10*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f01*f22 - 5.0/3.0*f02*f21)*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-f01*f22 + f02*f21)*(2*f11*f22 - 2*f12*f21) ;
    ddw(0,2)= C*(2*f00*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f01*f12 + (5.0/3.0)*f02*f11)*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(f01*f12 - f02*f11)*(2*f11*f22 - 2*f12*f21) ;
    ddw(0,3)= C*(2*f00*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f01*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f10*f22 - 5.0/3.0*f12*f20)*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-f10*f22 + f12*f20)*(2*f11*f22 - 2*f12*f21) ;
    ddw(0,4)= C*(2*f00*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f22*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f22 + (5.0/3.0)*f02*f20)*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f22*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(f00*f22 - f02*f20)*(2*f11*f22 - 2*f12*f21) ;
    ddw(0,5)= C*(2*f00*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f12*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f12 - 5.0/3.0*f02*f10)*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f12*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-f00*f12 + f02*f10)*(2*f11*f22 - 2*f12*f21) ;
    ddw(0,6)= C*(2*f00*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f02*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f10*f21 + (5.0/3.0)*f11*f20)*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(f10*f21 - f11*f20)*(2*f11*f22 - 2*f12*f21) ;
    ddw(0,7)= C*(2*f00*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f21*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f21 - 5.0/3.0*f01*f20)*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f21*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-f00*f21 + f01*f20)*(2*f11*f22 - 2*f12*f21) ;
    ddw(0,8)= C*(2*f00*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f11*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f11 + (5.0/3.0)*f01*f10)*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f11*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(f00*f11 - f01*f10)*(2*f11*f22 - 2*f12*f21) ;
    ddw(1,0)= C*(2*f00*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f10*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)*(-5.0/3.0*f11*f22 + (5.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-2*f01*f22 + 2*f02*f21)*(f11*f22 - f12*f21) ;
    ddw(1,1)= C*(4*f10*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)*((5.0/3.0)*f01*f22 - 5.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0) + 2/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 2.0/3.0)) + D*(-2*f01*f22 + 2*f02*f21)*(-f01*f22 + f02*f21) ;
    ddw(1,2)= C*(2*f10*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f01*f12 + (5.0/3.0)*f02*f11)*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(f01*f12 - f02*f11)*(-2*f01*f22 + 2*f02*f21) ;
    ddw(1,3)= C*(2*f01*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f10*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f22*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)*((5.0/3.0)*f10*f22 - 5.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f22*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-2*f01*f22 + 2*f02*f21)*(-f10*f22 + f12*f20) ;
    ddw(1,4)= C*(2*f10*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f22 + (5.0/3.0)*f02*f20)*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(f00*f22 - f02*f20)*(-2*f01*f22 + 2*f02*f21) ;
    ddw(1,5)= C*(-2.0/3.0*f02*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f10*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f12 - 5.0/3.0*f02*f10)*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f02*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-f00*f12 + f02*f10)*(-2*f01*f22 + 2*f02*f21) ;
    ddw(1,6)= C*(2*f02*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f10*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f21*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)*(-5.0/3.0*f10*f21 + (5.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f21*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-2*f01*f22 + 2*f02*f21)*(f10*f21 - f11*f20) ;
    ddw(1,7)= C*(2*f10*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f21 - 5.0/3.0*f01*f20)*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-f00*f21 + f01*f20)*(-2*f01*f22 + 2*f02*f21) ;
    ddw(1,8)= C*((2.0/3.0)*f01*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f10*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f11 + (5.0/3.0)*f01*f10)*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f01*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(f00*f11 - f01*f10)*(-2*f01*f22 + 2*f02*f21) ;
    ddw(2,0)= C*(2*f00*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)*(-5.0/3.0*f11*f22 + (5.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(2*f01*f12 - 2*f02*f11)*(f11*f22 - f12*f21) ;
    ddw(2,1)= C*(2*f10*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)*((5.0/3.0)*f01*f22 - 5.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(2*f01*f12 - 2*f02*f11)*(-f01*f22 + f02*f21) ;
    ddw(2,2)= C*(4*f20*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f01*f12 + (5.0/3.0)*f02*f11)*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0) + 2/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 2.0/3.0)) + D*(f01*f12 - f02*f11)*(2*f01*f12 - 2*f02*f11) ;
    ddw(2,3)= C*(2*f01*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f12*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)*((5.0/3.0)*f10*f22 - 5.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f12*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(2*f01*f12 - 2*f02*f11)*(-f10*f22 + f12*f20) ;
    ddw(2,4)= C*((2.0/3.0)*f02*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f22 + (5.0/3.0)*f02*f20)*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f02*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(f00*f22 - f02*f20)*(2*f01*f12 - 2*f02*f11) ;
    ddw(2,5)= C*(2*f20*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f12 - 5.0/3.0*f02*f10)*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-f00*f12 + f02*f10)*(2*f01*f12 - 2*f02*f11) ;
    ddw(2,6)= C*(2*f02*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f11*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)*(-5.0/3.0*f10*f21 + (5.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f11*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(2*f01*f12 - 2*f02*f11)*(f10*f21 - f11*f20) ;
    ddw(2,7)= C*(-2.0/3.0*f01*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f21 - 5.0/3.0*f01*f20)*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f01*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-f00*f21 + f01*f20)*(2*f01*f12 - 2*f02*f11) ;
    ddw(2,8)= C*(2*f20*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f11 + (5.0/3.0)*f01*f10)*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(f00*f11 - f01*f10)*(2*f01*f12 - 2*f02*f11) ;
    ddw(3,0)= C*(2*f00*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f01*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)*(-5.0/3.0*f11*f22 + (5.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-2*f10*f22 + 2*f12*f20)*(f11*f22 - f12*f21) ;
    ddw(3,1)= C*(2*f01*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f10*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f22*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f01*f22 - 5.0/3.0*f02*f21)*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f22*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-f01*f22 + f02*f21)*(-2*f10*f22 + 2*f12*f20) ;
    ddw(3,2)= C*(2*f01*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f12*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f01*f12 + (5.0/3.0)*f02*f11)*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f12*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(f01*f12 - f02*f11)*(-2*f10*f22 + 2*f12*f20) ;
    ddw(3,3)= C*(4*f01*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)*((5.0/3.0)*f10*f22 - 5.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0) + 2/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 2.0/3.0)) + D*(-2*f10*f22 + 2*f12*f20)*(-f10*f22 + f12*f20) ;
    ddw(3,4)= C*(2*f01*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f22 + (5.0/3.0)*f02*f20)*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(f00*f22 - f02*f20)*(-2*f10*f22 + 2*f12*f20) ;
    ddw(3,5)= C*(2*f01*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f12 - 5.0/3.0*f02*f10)*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-f00*f12 + f02*f10)*(-2*f10*f22 + 2*f12*f20) ;
    ddw(3,6)= C*(2*f01*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f02*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f10*f21 + (5.0/3.0)*f11*f20)*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(f10*f21 - f11*f20)*(-2*f10*f22 + 2*f12*f20) ;
    ddw(3,7)= C*(2*f01*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f20*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f21 - 5.0/3.0*f01*f20)*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f20*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-f00*f21 + f01*f20)*(-2*f10*f22 + 2*f12*f20) ;
    ddw(3,8)= C*(2*f01*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f10*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f11 + (5.0/3.0)*f01*f10)*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f10*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(f00*f11 - f01*f10)*(-2*f10*f22 + 2*f12*f20) ;
    ddw(4,0)= C*(2*f00*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f22*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)*(-5.0/3.0*f11*f22 + (5.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f22*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(2*f00*f22 - 2*f02*f20)*(f11*f22 - f12*f21) ;
    ddw(4,1)= C*(2*f10*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)*((5.0/3.0)*f01*f22 - 5.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(2*f00*f22 - 2*f02*f20)*(-f01*f22 + f02*f21) ;
    ddw(4,2)= C*((2.0/3.0)*f02*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)*(-5.0/3.0*f01*f12 + (5.0/3.0)*f02*f11)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f02*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(2*f00*f22 - 2*f02*f20)*(f01*f12 - f02*f11) ;
    ddw(4,3)= C*(2*f01*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)*((5.0/3.0)*f10*f22 - 5.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(2*f00*f22 - 2*f02*f20)*(-f10*f22 + f12*f20) ;
    ddw(4,4)= C*(4*f11*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f22 + (5.0/3.0)*f02*f20)*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0) + 2/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 2.0/3.0)) + D*(f00*f22 - f02*f20)*(2*f00*f22 - 2*f02*f20) ;
    ddw(4,5)= C*(2*f11*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f12 - 5.0/3.0*f02*f10)*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-f00*f12 + f02*f10)*(2*f00*f22 - 2*f02*f20) ;
    ddw(4,6)= C*(2*f02*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f20*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)*(-5.0/3.0*f10*f21 + (5.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f20*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(2*f00*f22 - 2*f02*f20)*(f10*f21 - f11*f20) ;
    ddw(4,7)= C*(2*f11*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f21 - 5.0/3.0*f01*f20)*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-f00*f21 + f01*f20)*(2*f00*f22 - 2*f02*f20) ;
    ddw(4,8)= C*(-2.0/3.0*f00*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f11 + (5.0/3.0)*f01*f10)*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f00*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(f00*f11 - f01*f10)*(2*f00*f22 - 2*f02*f20) ;
    ddw(5,0)= C*(2*f00*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f12*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)*(-5.0/3.0*f11*f22 + (5.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f12*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-2*f00*f12 + 2*f02*f10)*(f11*f22 - f12*f21) ;
    ddw(5,1)= C*(-2.0/3.0*f02*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f10*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)*((5.0/3.0)*f01*f22 - 5.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f02*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-2*f00*f12 + 2*f02*f10)*(-f01*f22 + f02*f21) ;
    ddw(5,2)= C*(2*f20*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)*(-5.0/3.0*f01*f12 + (5.0/3.0)*f02*f11)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-2*f00*f12 + 2*f02*f10)*(f01*f12 - f02*f11) ;
    ddw(5,3)= C*(2*f01*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)*((5.0/3.0)*f10*f22 - 5.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-2*f00*f12 + 2*f02*f10)*(-f10*f22 + f12*f20) ;
    ddw(5,4)= C*(2*f11*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)*(-5.0/3.0*f00*f22 + (5.0/3.0)*f02*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-2*f00*f12 + 2*f02*f10)*(f00*f22 - f02*f20) ;
    ddw(5,5)= C*(4*f21*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)*((5.0/3.0)*f00*f12 - 5.0/3.0*f02*f10)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0) + 2/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 2.0/3.0)) + D*(-2*f00*f12 + 2*f02*f10)*(-f00*f12 + f02*f10) ;
    ddw(5,6)= C*(2*f02*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f10*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)*(-5.0/3.0*f10*f21 + (5.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f10*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-2*f00*f12 + 2*f02*f10)*(f10*f21 - f11*f20) ;
    ddw(5,7)= C*((2.0/3.0)*f00*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)*((5.0/3.0)*f00*f21 - 5.0/3.0*f01*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f00*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-2*f00*f12 + 2*f02*f10)*(-f00*f21 + f01*f20) ;
    ddw(5,8)= C*(2*f21*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f11 + (5.0/3.0)*f01*f10)*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(f00*f11 - f01*f10)*(-2*f00*f12 + 2*f02*f10) ;
    ddw(6,0)= C*(2*f00*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f02*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)*(-5.0/3.0*f11*f22 + (5.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(2*f10*f21 - 2*f11*f20)*(f11*f22 - f12*f21) ;
    ddw(6,1)= C*(2*f02*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f10*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f21*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f01*f22 - 5.0/3.0*f02*f21)*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f21*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-f01*f22 + f02*f21)*(2*f10*f21 - 2*f11*f20) ;
    ddw(6,2)= C*(2*f02*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f11*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f01*f12 + (5.0/3.0)*f02*f11)*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f11*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(f01*f12 - f02*f11)*(2*f10*f21 - 2*f11*f20) ;
    ddw(6,3)= C*(2*f01*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f02*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)*((5.0/3.0)*f10*f22 - 5.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(2*f10*f21 - 2*f11*f20)*(-f10*f22 + f12*f20) ;
    ddw(6,4)= C*(2*f02*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f20*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f22 + (5.0/3.0)*f02*f20)*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f20*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(f00*f22 - f02*f20)*(2*f10*f21 - 2*f11*f20) ;
    ddw(6,5)= C*(2*f02*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f10*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f12 - 5.0/3.0*f02*f10)*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f10*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-f00*f12 + f02*f10)*(2*f10*f21 - 2*f11*f20) ;
    ddw(6,6)= C*(4*f02*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f10*f21 + (5.0/3.0)*f11*f20)*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0) + 2/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 2.0/3.0)) + D*(f10*f21 - f11*f20)*(2*f10*f21 - 2*f11*f20) ;
    ddw(6,7)= C*(2*f02*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f21 - 5.0/3.0*f01*f20)*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-f00*f21 + f01*f20)*(2*f10*f21 - 2*f11*f20) ;
    ddw(6,8)= C*(2*f02*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f11 + (5.0/3.0)*f01*f10)*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(f00*f11 - f01*f10)*(2*f10*f21 - 2*f11*f20) ;
    ddw(7,0)= C*(2*f00*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f21*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)*(-5.0/3.0*f11*f22 + (5.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f21*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-2*f00*f21 + 2*f01*f20)*(f11*f22 - f12*f21) ;
    ddw(7,1)= C*(2*f10*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)*((5.0/3.0)*f01*f22 - 5.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-2*f00*f21 + 2*f01*f20)*(-f01*f22 + f02*f21) ;
    ddw(7,2)= C*(-2.0/3.0*f01*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f20*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)*(-5.0/3.0*f01*f12 + (5.0/3.0)*f02*f11)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f01*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-2*f00*f21 + 2*f01*f20)*(f01*f12 - f02*f11) ;
    ddw(7,3)= C*(2*f01*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f20*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)*((5.0/3.0)*f10*f22 - 5.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f20*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-2*f00*f21 + 2*f01*f20)*(-f10*f22 + f12*f20) ;
    ddw(7,4)= C*(2*f11*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)*(-5.0/3.0*f00*f22 + (5.0/3.0)*f02*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-2*f00*f21 + 2*f01*f20)*(f00*f22 - f02*f20) ;
    ddw(7,5)= C*((2.0/3.0)*f00*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f21*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((5.0/3.0)*f00*f12 - 5.0/3.0*f02*f10)*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f00*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(-f00*f12 + f02*f10)*(-2*f00*f21 + 2*f01*f20) ;
    ddw(7,6)= C*(2*f02*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f12*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)*(-5.0/3.0*f10*f21 + (5.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(-2*f00*f21 + 2*f01*f20)*(f10*f21 - f11*f20) ;
    ddw(7,7)= C*(4*f12*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + ((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)*((5.0/3.0)*f00*f21 - 5.0/3.0*f01*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0) + 2/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 2.0/3.0)) + D*(-2*f00*f21 + 2*f01*f20)*(-f00*f21 + f01*f20) ;
    ddw(7,8)= C*(2*f12*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f11 + (5.0/3.0)*f01*f10)*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(f00*f11 - f01*f10)*(-2*f00*f21 + 2*f01*f20) ;
    ddw(8,0)= C*(2*f00*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) - 2.0/3.0*f11*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*(-2.0/3.0*f11*f22 + (2.0/3.0)*f12*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)*(-5.0/3.0*f11*f22 + (5.0/3.0)*f12*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f11*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(2*f00*f11 - 2*f01*f10)*(f11*f22 - f12*f21) ;
    ddw(8,1)= C*((2.0/3.0)*f01*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f10*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*((2.0/3.0)*f01*f22 - 2.0/3.0*f02*f21)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)*((5.0/3.0)*f01*f22 - 5.0/3.0*f02*f21)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f01*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(2*f00*f11 - 2*f01*f10)*(-f01*f22 + f02*f21) ;
    ddw(8,2)= C*(2*f20*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*(-2.0/3.0*f01*f12 + (2.0/3.0)*f02*f11)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)*(-5.0/3.0*f01*f12 + (5.0/3.0)*f02*f11)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(2*f00*f11 - 2*f01*f10)*(f01*f12 - f02*f11) ;
    ddw(8,3)= C*(2*f01*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (2.0/3.0)*f10*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*((2.0/3.0)*f10*f22 - 2.0/3.0*f12*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)*((5.0/3.0)*f10*f22 - 5.0/3.0*f12*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) - 2*D*f10*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(2*f00*f11 - 2*f01*f10)*(-f10*f22 + f12*f20) ;
    ddw(8,4)= C*(-2.0/3.0*f00*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f11*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*(-2.0/3.0*f00*f22 + (2.0/3.0)*f02*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)*(-5.0/3.0*f00*f22 + (5.0/3.0)*f02*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + 2*D*f00*(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20 - 1) + D*(2*f00*f11 - 2*f01*f10)*(f00*f22 - f02*f20) ;
    ddw(8,5)= C*(2*f21*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*((2.0/3.0)*f00*f12 - 2.0/3.0*f02*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)*((5.0/3.0)*f00*f12 - 5.0/3.0*f02*f10)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(2*f00*f11 - 2*f01*f10)*(-f00*f12 + f02*f10) ;
    ddw(8,6)= C*(2*f02*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*(-2.0/3.0*f10*f21 + (2.0/3.0)*f11*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)*(-5.0/3.0*f10*f21 + (5.0/3.0)*f11*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(2*f00*f11 - 2*f01*f10)*(f10*f21 - f11*f20) ;
    ddw(8,7)= C*(2*f12*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + 2*f22*((2.0/3.0)*f00*f21 - 2.0/3.0*f01*f20)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)*((5.0/3.0)*f00*f21 - 5.0/3.0*f01*f20)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0)) + D*(2*f00*f11 - 2*f01*f10)*(-f00*f21 + f01*f20) ;
    ddw(8,8)= C*(4*f22*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 5.0/3.0) + (-5.0/3.0*f00*f11 + (5.0/3.0)*f01*f10)*(-2.0/3.0*f00*f11 + (2.0/3.0)*f01*f10)*(pow(f00, 2) + pow(f01, 2) + pow(f02, 2) + pow(f10, 2) + pow(f11, 2) + pow(f12, 2) + pow(f20, 2) + pow(f21, 2) + pow(f22, 2))/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 8.0/3.0) + 2/pow(f00*f11*f22 - f00*f12*f21 - f01*f10*f22 + f01*f12*f20 + f02*f10*f21 - f02*f11*f20, 2.0/3.0)) + D*(f00*f11 - f01*f10)*(2*f00*f11 - 2*f01*f10) ;

}